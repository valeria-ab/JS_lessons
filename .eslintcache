[{"/home/lera/incubator/JS Native/JS Lessons/src/redux/currencyReducer.ts":"1","/home/lera/incubator/JS Native/JS Lessons/src/index.tsx":"2","/home/lera/incubator/JS Native/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx":"3","/home/lera/incubator/JS Native/JS Lessons/src/redux/actions.ts":"4","/home/lera/incubator/JS Native/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx":"5","/home/lera/incubator/JS Native/JS Lessons/src/redux/selectors.ts":"6","/home/lera/incubator/JS Native/JS Lessons/src/lessons/lesson2/lesson2.ts":"7"},{"size":1526,"mtime":1630524838109,"results":"8","hashOfConfig":"9"},{"size":319,"mtime":1609752860000,"results":"10","hashOfConfig":"9"},{"size":3871,"mtime":1609757734000,"results":"11","hashOfConfig":"9"},{"size":1462,"mtime":1630525462690,"results":"12","hashOfConfig":"9"},{"size":3019,"mtime":1630528931470,"results":"13","hashOfConfig":"9"},{"size":211,"mtime":1630528980239,"results":"14","hashOfConfig":"9"},{"size":4126,"mtime":1631558242284,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jkssed",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lera/incubator/JS Native/JS Lessons/src/redux/currencyReducer.ts",[],"/home/lera/incubator/JS Native/JS Lessons/src/index.tsx",[],"/home/lera/incubator/JS Native/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx",[],"/home/lera/incubator/JS Native/JS Lessons/src/redux/actions.ts",[],"/home/lera/incubator/JS Native/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx",["31","32","33"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport { CurrencyState, CurrencyType } from '../../redux/currencyReducer';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {selectAllCurrencyState} from \"../../redux/selectors\";\r\n\r\nconst CurrencyEContainer: React.FC = () => {\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectAllCurrencyState);\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>()\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default CurrencyEContainer;","/home/lera/incubator/JS Native/JS Lessons/src/redux/selectors.ts",[],"/home/lera/incubator/JS Native/JS Lessons/src/lessons/lesson2/lesson2.ts",["34"],{"ruleId":"35","severity":1,"message":"36","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":23},{"ruleId":"35","severity":1,"message":"39","line":11,"column":9,"nodeType":"37","messageId":"38","endLine":11,"endColumn":16},{"ruleId":"35","severity":1,"message":"40","line":11,"column":18,"nodeType":"37","messageId":"38","endLine":11,"endColumn":32},{"ruleId":"41","severity":1,"message":"42","line":124,"column":1,"nodeType":"43","endLine":124,"endColumn":25},"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]